@using StateOfOhioLibrary.Models;
@model ResetPasswordViewModel

@{
    Layout = "~/Views/Shared/_OuterLayout.cshtml";
    ViewBag.Title = "Reset Password";

    int tabIndex = 1;
}
@using (Html.BeginForm("ResetPassword", "Login", new { id = Model.Id, token = Model.Token }, FormMethod.Post, new { @class = "form-resetpassword" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.Token)
    @Html.HiddenFor(m => m.Id)

    <div class="col-md-12">
        <div id="inner-right-area">
            <div class="container">
                <div class="col-md-12 clearfix">
                    <h1 class="div-space-three">@ViewBag.Title</h1>
                </div>
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="shadow-container">
                        <div class="alert alert-danger">

                            @Html.ValidationSummary("", new { @style = "color:#a94442;" })
                        </div>
                    </div>
                }
                else
                {
                    if (ViewBag.Message != null && ViewBag.Message == "Error")
                    {

                        <div class="shadow-container">
                            <div class="alert alert-danger">Password reset failed. Please try again.</div>
                        </div>

                    }
                }
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <div class="search-panel">
                        <table width="100%" border="0" cellspacing="0" cellpadding="0">
                            <tr>
                                <td width="30%"><label>New Password:</label></td>
                                <td width="70%">
                                    @Html.PasswordFor(m => m.NewPassword, new { @class = "search-control-eight", @autocomplete = "off", @tabindex = tabIndex, @maxlength = "20" })
                                    @{tabIndex++; }


                                </td>
                            </tr>
                            <tr>
                                <td><label>Confirm Password:</label></td>
                                <td>
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "search-control-eight", @autocomplete = "off", @tabindex = tabIndex, @maxlength = "20" })
                                    @{tabIndex++; }
                                </td>
                            </tr>
                        </table>
                        <div class="col-md-12 text-center div-space-one">
                            <button id="submit" name="submit" type="submit" value="Submit" class="submit-btn" tabindex="@tabIndex">Submit</button>
                            @{tabIndex++; }
                            <a class="cancel-button" tabindex="@tabIndex" style="cursor:pointer;" onclick="GoToPreviousPage();">Cancel</a>
                        </div>
                    </div>
                </div>
                <div class="col-md-3"></div>
            </div>
        </div>
    </div>
                                }


<script>
    function GoToPreviousPage() {
        window.location.href = "/Login";
    }
</script>
